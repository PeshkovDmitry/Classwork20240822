"""
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
üìå –û–±—ä–µ–¥–∏–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –ø—Ä–æ—à–ª—ã—Ö –∑–∞–¥–∞—á.
üìå –§—É–Ω–∫—Ü–∏—é —É–≥–∞–¥–∞–π–∫—É –∑–∞–¥–µ–∫–æ—Ä–∏—Ä—É–π—Ç–µ:
‚óã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤,
‚óã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º –∫–æ–Ω—Ç—Ä–æ–ª—è –∑–Ω–∞—á–µ–Ω–∏–π –∏
‚óã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞.
üìå –í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤.
"""

from typing import Callable
import json
import os.path
from random import randint


def check_params(func: Callable):
    def wrapper(*args, **kwargs):
        num, cnt = args
        if num not in range(1, 101):
            new_num = randint(1, 101)
            print(f'–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ —Å {num} –Ω–∞ {new_num}')
            num = new_num
        if cnt not in range(1, 11):
            new_cnt = randint(1, 11)
            print(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–æ —Å {cnt} –Ω–∞ {new_cnt}')
            cnt = new_cnt
        args = (num, cnt)
        result = func(*args, **kwargs)
        return result

    return wrapper


def save_result(func: Callable):
    def wrapper(*args, **kwargs):
        num, cnt = args
        result = func(*args, **kwargs)
        info = []
        path = func.__name__ + '.json'
        if os.path.exists(path):
            with open(path, 'r') as f:
                info = json.load(f)
        with open(path, 'w') as f:
            info.append({'num': num, 'cnt': cnt, 'result': result})
            json.dump(info, f, indent=4)
        return result

    return wrapper


def count(num: int = 1):
    def deco(func: Callable):
        def wrapper(*args, **kwargs):
            result = []
            for cnt in range(num):
                print(f'–í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ {func.__name__} # {cnt}')
                result.append(func(*args, **kwargs))
            return result

        return wrapper

    return deco


@check_params
@save_result
@count(2)
def attempt(num: int, cnt: int) -> bool:
    current_attempt: int = 0
    while current_attempt < cnt:
        num_from_console = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ -> "))
        if num_from_console == num:
            print("–í—ã —É–≥–∞–¥–∞–ª–∏")
            return True
        current_attempt += 1
        print("–í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏")
    print("–ü–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å")
    return False


print(attempt(25, 15))
